// This file was generated by Conjure and should not be manually edited.

package verification

import (
	"encoding/json"

	"github.com/palantir/conjure-go/conjure/types/conjuretype"
)

type AliasString string
type StringAliasExample string
type DoubleAliasExample float64
type IntegerAliasExample int
type BooleanAliasExample bool
type SafeLongAliasExample conjuretype.SafeLong

func (a SafeLongAliasExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(conjuretype.SafeLong(a))
}

func (a *SafeLongAliasExample) UnmarshalJSON(data []byte) error {
	var rawSafeLongAliasExample conjuretype.SafeLong
	if err := json.Unmarshal(data, &rawSafeLongAliasExample); err != nil {
		return err
	}
	*a = SafeLongAliasExample(rawSafeLongAliasExample)
	return nil
}

func (a SafeLongAliasExample) MarshalYAML() (interface{}, error) {
	return conjuretype.SafeLong(a), nil
}

func (a *SafeLongAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSafeLongAliasExample conjuretype.SafeLong
	if err := unmarshal(&rawSafeLongAliasExample); err != nil {
		return err
	}
	*a = SafeLongAliasExample(rawSafeLongAliasExample)
	return nil
}

type RidAliasExample conjuretype.ResourceIdentifier

func (a RidAliasExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(conjuretype.ResourceIdentifier(a))
}

func (a *RidAliasExample) UnmarshalJSON(data []byte) error {
	var rawRidAliasExample conjuretype.ResourceIdentifier
	if err := json.Unmarshal(data, &rawRidAliasExample); err != nil {
		return err
	}
	*a = RidAliasExample(rawRidAliasExample)
	return nil
}

func (a RidAliasExample) MarshalYAML() (interface{}, error) {
	return conjuretype.ResourceIdentifier(a), nil
}

func (a *RidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawRidAliasExample conjuretype.ResourceIdentifier
	if err := unmarshal(&rawRidAliasExample); err != nil {
		return err
	}
	*a = RidAliasExample(rawRidAliasExample)
	return nil
}

type BearerTokenAliasExample conjuretype.Bearertoken

func (a BearerTokenAliasExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(conjuretype.Bearertoken(a))
}

func (a *BearerTokenAliasExample) UnmarshalJSON(data []byte) error {
	var rawBearerTokenAliasExample conjuretype.Bearertoken
	if err := json.Unmarshal(data, &rawBearerTokenAliasExample); err != nil {
		return err
	}
	*a = BearerTokenAliasExample(rawBearerTokenAliasExample)
	return nil
}

func (a BearerTokenAliasExample) MarshalYAML() (interface{}, error) {
	return conjuretype.Bearertoken(a), nil
}

func (a *BearerTokenAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawBearerTokenAliasExample conjuretype.Bearertoken
	if err := unmarshal(&rawBearerTokenAliasExample); err != nil {
		return err
	}
	*a = BearerTokenAliasExample(rawBearerTokenAliasExample)
	return nil
}

type UuidAliasExample conjuretype.UUID

func (a UuidAliasExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(conjuretype.UUID(a))
}

func (a *UuidAliasExample) UnmarshalJSON(data []byte) error {
	var rawUuidAliasExample conjuretype.UUID
	if err := json.Unmarshal(data, &rawUuidAliasExample); err != nil {
		return err
	}
	*a = UuidAliasExample(rawUuidAliasExample)
	return nil
}

func (a UuidAliasExample) MarshalYAML() (interface{}, error) {
	return conjuretype.UUID(a), nil
}

func (a *UuidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawUuidAliasExample conjuretype.UUID
	if err := unmarshal(&rawUuidAliasExample); err != nil {
		return err
	}
	*a = UuidAliasExample(rawUuidAliasExample)
	return nil
}

type ReferenceAliasExample AnyExample

func (a ReferenceAliasExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(AnyExample(a))
}

func (a *ReferenceAliasExample) UnmarshalJSON(data []byte) error {
	var rawReferenceAliasExample AnyExample
	if err := json.Unmarshal(data, &rawReferenceAliasExample); err != nil {
		return err
	}
	*a = ReferenceAliasExample(rawReferenceAliasExample)
	return nil
}

func (a ReferenceAliasExample) MarshalYAML() (interface{}, error) {
	return AnyExample(a), nil
}

func (a *ReferenceAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawReferenceAliasExample AnyExample
	if err := unmarshal(&rawReferenceAliasExample); err != nil {
		return err
	}
	*a = ReferenceAliasExample(rawReferenceAliasExample)
	return nil
}

type DateTimeAliasExample conjuretype.DateTime

func (a DateTimeAliasExample) MarshalJSON() ([]byte, error) {
	return json.Marshal(conjuretype.DateTime(a))
}

func (a *DateTimeAliasExample) UnmarshalJSON(data []byte) error {
	var rawDateTimeAliasExample conjuretype.DateTime
	if err := json.Unmarshal(data, &rawDateTimeAliasExample); err != nil {
		return err
	}
	*a = DateTimeAliasExample(rawDateTimeAliasExample)
	return nil
}

func (a DateTimeAliasExample) MarshalYAML() (interface{}, error) {
	return conjuretype.DateTime(a), nil
}

func (a *DateTimeAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawDateTimeAliasExample conjuretype.DateTime
	if err := unmarshal(&rawDateTimeAliasExample); err != nil {
		return err
	}
	*a = DateTimeAliasExample(rawDateTimeAliasExample)
	return nil
}

type BinaryAliasExample []byte
type EndpointName string
